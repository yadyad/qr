package com.zs.cws.schooladmin.kudos.controller;

import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.zs.cws.schooladmin.kudos.dao.KudosDAO;
import com.zs.cws.schooladmin.kudos.model.KudosModel;
import com.zs.cws.schooladmin.kudos.repository.KudosRepository;
import com.zs.cws.schooladmin.subscriptionactivation.dao.SubscriptionActivationDAO;
import com.zs.cws.superadmin.school.model.SchoolModel;
import com.zs.cws.superadmin.school.repository.SchoolRepository;
import com.zs.cws.superadmin.schooldivision.dao.SchoolDivDAO;
import com.zs.cws.superadmin.schoolstaff.dao.SchoolStaffDAO;
import com.zs.cws.superadmin.student.dao.StudentDAO;
import com.zs.cws.superadmin.student.model.StudentModel;
import com.zs.cws.utils.FileAction;
import com.zs.cws.utils.GlobalVariables;
import com.zs.cws.utils.UploadFiles;

@Controller
@Scope("session")
@RequestMapping("schooladmin/kudos")
public class KudosController {

	@Autowired
	KudosRepository kudosRepository;
	@Autowired
	SubscriptionActivationDAO subscriptionActivationDAO;
	@Autowired
	KudosDAO kudosDAO;
	@Autowired
	StudentDAO studentDAO;
	int kudosId;
	@Autowired
	SchoolRepository schoolRepository;
	@Autowired
	SchoolStaffDAO SchoolStaffDAO;
	@Autowired
	SchoolDivDAO schoolDivDAO;

	@RequestMapping()
	public ModelAndView KudosHome() {
		ModelAndView modelAndView = new ModelAndView("kudos-home");
		modelAndView.addObject("staffCount", SchoolStaffDAO.getStaffCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("divisionCount", schoolDivDAO.getDivisionCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("studentCount", studentDAO.getStudentsCount(GlobalVariables.SCHOOL_ID));
		if (!subscriptionActivationDAO.isSubscribed(GlobalVariables.SCHOOL_ID)) {
			modelAndView = new ModelAndView("redirect:/redirect");
		}
		return modelAndView;
	}

	@RequestMapping(value = "/kudoslistAll", method = RequestMethod.GET)
	public @ResponseBody Object listAllUsers() {
		List<KudosModel> kudosModels = kudosDAO.getAllKudos(GlobalVariables.SCHOOL_ID);
		return kudosModels;
	}

	@RequestMapping(value = "/studentList", method = RequestMethod.GET)
	public @ResponseBody Object listStudents() {
		List<StudentModel> studentList = studentDAO.getStudentBySchool(GlobalVariables.SCHOOL_ID);
		System.out.println("Student LIST:::>>>>" + studentList.toString());
		return studentList;
	}

	@RequestMapping(value = { "/post" }, method = RequestMethod.POST, produces = { "application/json" })
	public @ResponseBody Object getJsonData(HttpServletRequest request, @RequestBody KudosModel kudosModel,
			HttpSession session) {

		String loggedUser = (String) session.getAttribute("loggedUser");
		// if (!newstDAO.isAvailable(newsModel)) {
		kudosModel.setCreatedBy(loggedUser);
		kudosModel.setUpdatedBy(loggedUser);
		kudosModel.setCreatedDate(new Date());
		kudosModel.setUpdatedDate(new Date());
		kudosModel.setSchoolId(GlobalVariables.SCHOOL_ID);
		kudosRepository.save(kudosModel);
		kudosId = kudosModel.getKudosId();
		return kudosModel;
		/*
		 * } else { System.out.println("DUplicate"); return null; }
		 */
	}

	@RequestMapping(value = "/kudosdeleteItems/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int[] kudosIDS, HttpServletRequest request) {
		for (int kudosID : kudosIDS) {
			if (kudosID != 0) {
				System.out.println("newsiddddddddddd" + kudosID);

				KudosModel km = kudosRepository.findOne(kudosID);
				String[] fileName = km.getImageUrl().split(FileAction.getURLBase(request));
				/*	double fileSize = FileAction.getFileSize(request, fileName[1]);
				System.out.println("FILE SIZE::>" + fileSize);*/
				 FileAction.deleteFile(request, fileName[1]);

				 kudosRepository.delete(kudosID);
			}
		}
		return true;

	}

	@RequestMapping(value = "/kudosdeleteSingleItem/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int kudosID, HttpServletRequest request) {

		KudosModel kudosModel = new KudosModel();
		kudosModel = kudosRepository.findOne(kudosID);
		String[] fileName = kudosModel.getImageUrl().split(FileAction.getURLBase(request));
		FileAction.deleteFile(request, fileName[1]);
		kudosRepository.delete(kudosID);
		return false;

	}

	@RequestMapping(value = "/insertKudosImage", method = RequestMethod.POST)
	public @ResponseBody Object uploadKudosImage(@RequestParam(value = "file", required = false) MultipartFile file,
			HttpSession session, HttpServletRequest request) throws IOException {

		KudosModel kudosModel = new KudosModel();
		if (file != null) {
			kudosModel = kudosRepository.findOne(kudosId);
			if (kudosModel.getImageUrl() != null) {
				String[] fileName = kudosModel.getImageUrl().split(FileAction.getURLBase(request));
				FileAction.deleteFile(request, fileName[1]);
			}
			SchoolModel schoolModel = schoolRepository.findOne(GlobalVariables.SCHOOL_ID);
			String directory = "/resources/img/" + schoolModel.getManagementModel().getManagementName() + "/"
					+ schoolModel.getSchoolName() + "/kudos";
			kudosModel.setImageUrl(UploadFiles.uploadDocument(file, request, directory, ".jpg"));
			kudosRepository.save(kudosModel);
		}
		return kudosModel;
	}

}
