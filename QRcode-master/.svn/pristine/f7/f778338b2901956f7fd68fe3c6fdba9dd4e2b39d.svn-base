package com.zs.cws.schooladmin.news.controller;

import java.io.IOException;
import java.util.Date;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.zs.cws.schooladmin.news.dao.NewstDAO;
import com.zs.cws.schooladmin.news.model.NewsModel;
import com.zs.cws.schooladmin.news.repository.NewsRepository;
import com.zs.cws.schooladmin.subscriptionactivation.dao.SubscriptionActivationDAO;
import com.zs.cws.superadmin.school.model.SchoolModel;
import com.zs.cws.superadmin.school.repository.SchoolRepository;
import com.zs.cws.superadmin.schooldivision.dao.SchoolDivDAO;
import com.zs.cws.superadmin.schoolstaff.dao.SchoolStaffDAO;
import com.zs.cws.superadmin.student.dao.StudentDAO;
import com.zs.cws.utils.FileAction;
import com.zs.cws.utils.GlobalVariables;
import com.zs.cws.utils.UploadFiles;

@Controller
@Scope("session")
@RequestMapping("schooladmin/news")
public class NewsController {

	@Autowired
	NewsRepository newsrepository;
	@Autowired
	SubscriptionActivationDAO subscriptionActivationDAO;
	@Autowired
	SchoolRepository schoolRepository;
	@Autowired
	NewstDAO newstDAO;
	int newsId;
	@Autowired
	SchoolStaffDAO SchoolStaffDAO;
	@Autowired
	SchoolDivDAO schoolDivDAO;
	@Autowired
	StudentDAO studentDAO;
	@RequestMapping()
	public ModelAndView superAdminManagementPage() {
		ModelAndView model = new ModelAndView("schooladminnews_home");
		model.addObject("staffCount", SchoolStaffDAO.getStaffCount(GlobalVariables.SCHOOL_ID));
		model.addObject("divisionCount", schoolDivDAO.getDivisionCount(GlobalVariables.SCHOOL_ID));
		model.addObject("studentCount", studentDAO.getStudentsCount(GlobalVariables.SCHOOL_ID));
		if (!subscriptionActivationDAO.isSubscribed(GlobalVariables.SCHOOL_ID)) {
			model = new ModelAndView("redirect:/redirect");
		}
		return model;
	}

	@RequestMapping(value = "/newslistAll", method = RequestMethod.GET)
	public @ResponseBody Object listAllUsers() {
		List<NewsModel> newsModels = newstDAO.getNewsList(GlobalVariables.SCHOOL_ID);
		return newsModels;
	}

	@RequestMapping(value = { "/post" }, method = RequestMethod.POST, produces = { "application/json" })
	public @ResponseBody Object getJsonData(HttpServletRequest request, @RequestBody NewsModel newsModel,
			HttpSession session) {
		String loggedUser = (String) session.getAttribute("loggedUser");
		if (!newstDAO.isAvailable(newsModel)) {
			newsModel.setCreatedBy(loggedUser);
			newsModel.setUpdatedBy(loggedUser);
			newsModel.setCreatedDate(new Date());
			newsModel.setUpdatedDate(new Date());
			newsModel.setSchoolId(GlobalVariables.SCHOOL_ID);
			newsrepository.save(newsModel);
			newsId = newsModel.getNewsId();
			return newsModel;
		} else {
			System.out.println("DUplicate");
			return null;
		}
	}

	@RequestMapping(value = "/newsdeleteItems/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int[] newsIDS) {
		for (int newsID : newsIDS) {
			if (newsID != 0) {
				System.out.println("newsiddddddddddd" + newsID);
				newsrepository.delete(newsID);
			}
		}
		return true;
	}

	@RequestMapping(value = "/newsdeleteSingleItem/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int newsID, HttpServletRequest request) {

		NewsModel newsModel = new NewsModel();
		newsModel = newsrepository.findOne(newsID);
		String[] fileName = newsModel.getNewsImage().split(FileAction.getURLBase(request));
		FileAction.deleteFile(request, fileName[1]);
		newsrepository.delete(newsID);
		return false;
	}

	@RequestMapping(value = "/insertImage", method = RequestMethod.POST)
	public @ResponseBody Object uploadNewsImage(@RequestParam(value = "file", required = false) MultipartFile file,
			HttpSession session, HttpServletRequest request) throws IOException {
		NewsModel newsModel = new NewsModel();
		if (file != null) {
			newsModel = newsrepository.findOne(newsId);
			if (newsModel.getNewsImage() != null) {
				String[] fileName = newsModel.getNewsImage().split(FileAction.getURLBase(request));
				FileAction.deleteFile(request, fileName[1]);
			}

			SchoolModel schoolModel = schoolRepository.findOne(GlobalVariables.SCHOOL_ID);
			String directory = "/resources/img/" + schoolModel.getManagementModel().getManagementName() + "/"
					+ schoolModel.getSchoolName() + "/news";
			newsModel.setNewsImage(UploadFiles.uploadDocument(file, request, directory, ".jpg"));
			newsrepository.save(newsModel);
		}
		return newsModel;
	}
}
