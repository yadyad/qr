package com.zs.cws.schooladmin.announcements.controller;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.zs.cws.login.LoginModel;
import com.zs.cws.schooladmin.announcements.model.AnnouncementsModel;
import com.zs.cws.superadmin.school.model.SchoolModel;
import com.zs.cws.superadmin.schooldivision.dao.SchoolDivDAO;
import com.zs.cws.superadmin.schooldivision.model.SchoolDivModel;
import com.zs.cws.superadmin.schoolstaff.dao.SchoolStaffDAO;
import com.zs.cws.superadmin.schoolstaff.model.SchoolStaffModel;
import com.zs.cws.superadmin.student.dao.StudentDAO;
import com.zs.cws.utils.GlobalVariables;
import com.zs.cws.utils.MailSender;
import com.zs.cws.utils.MailSentPOJO;
import com.zs.cws.utils.SmsSender;

@Controller
@Scope("session")
@RequestMapping("schooladmin/announcements")
public class AnnouncementsController {
	@Autowired
	SchoolStaffDAO schoolStaffDAO;
	@Autowired
	SchoolDivDAO schoolDivDAO;
	@Autowired
	StudentDAO studentDAO;

	@RequestMapping()
	public ModelAndView view() {
		ModelAndView modelAndView = new ModelAndView("announcements-home");
		System.out.println("inside the controller");
		modelAndView.addObject("featureList", GlobalVariables.SCHOOL_FEATURE_LIST);
		modelAndView.addObject("staffCount", schoolStaffDAO.getStaffCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("divisionCount", schoolDivDAO.getDivisionCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("studentCount", studentDAO.getStudentsCount(GlobalVariables.SCHOOL_ID));
		return modelAndView;
	}

	@RequestMapping(value = { "/post" }, method = RequestMethod.POST, produces = { "application/json" })
	public @ResponseBody Object getJsonData(HttpServletRequest request,
			@RequestBody AnnouncementsModel announcementsModel, HttpSession session) {
		System.out.println("inside the contriolerrrrrr>>>>>" + GlobalVariables.SCHOOL_ID);
		List<LoginModel> staffList = schoolStaffDAO.getStaffBySchool(GlobalVariables.SCHOOL_ID);
		//if (announcementsModel.getType().equals("Message")) {
			Thread t = new Thread(new Runnable() {
				@Override
				public void run() {
					try {

						for (LoginModel loginModel : staffList) {
							loginModel.getUserName();
							try {
								SmsSender.sendMessage(loginModel.getUserName(), announcementsModel.getContent());
								System.out.println("is it happend");
							} catch (MalformedURLException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							} catch (IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
						}
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			});
			t.start();
		//}
		return 1;
	}

	@RequestMapping(value = { "/postemail" }, method = RequestMethod.POST, produces = { "application/json" })
	public ModelAndView  email(HttpServletRequest request,
			@RequestBody AnnouncementsModel announcementsModel, HttpSession session) {
		ModelAndView modelAndView = new ModelAndView("announcements-home");
		List<LoginModel> staffList = schoolStaffDAO.getStaffBySchool(GlobalVariables.SCHOOL_ID);

		Thread t = new Thread(new Runnable() {
			@Override
			public void run() {
				try {

					for (LoginModel loginModel : staffList) {

						MailSentPOJO mailSentPOJO = new MailSentPOJO();
						mailSentPOJO.setContent(announcementsModel.getContent());
						mailSentPOJO.setSubject(announcementsModel.getSubject());
						mailSentPOJO.setTo(loginModel.getSchoolStaffModel().getEmailId());
						mailSentPOJO.setFrom("clubwizardschool@gmail.com");
						try {
							MailSender.sendMail(mailSentPOJO);
							System.out.println(
									"mail sended to " + loginModel.getSchoolStaffModel().getEmailId() + " succesfully");
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		t.start();

		return modelAndView;

	}
}
