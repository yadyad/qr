package com.zs.cws.schooladmin.principalquotes.controller;

import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.zs.cws.schooladmin.kudos.model.KudosModel;
import com.zs.cws.schooladmin.principalquotes.dao.PrincipalQuoteDAO;
import com.zs.cws.schooladmin.principalquotes.model.PrincipalQuoteModel;
import com.zs.cws.schooladmin.principalquotes.repository.PrincipalQuoteRepository;
import com.zs.cws.superadmin.school.model.SchoolModel;
import com.zs.cws.superadmin.school.repository.SchoolRepository;
import com.zs.cws.superadmin.schooldivision.dao.SchoolDivDAO;
import com.zs.cws.superadmin.schoolstaff.dao.SchoolStaffDAO;
import com.zs.cws.superadmin.student.dao.StudentDAO;
import com.zs.cws.utils.FileAction;
import com.zs.cws.utils.GlobalVariables;
import com.zs.cws.utils.UploadFiles;

@Controller
@RequestMapping("schooladmin/principalquotes")
public class PrincipalQuoteController {

	@Autowired
	SchoolStaffDAO SchoolStaffDAO;
	@Autowired
	SchoolDivDAO schoolDivDAO;
	@Autowired
	StudentDAO studentDAO;

	@Autowired
	PrincipalQuoteRepository principalQuoteRepository;
	int quoteId;
	@Autowired
	PrincipalQuoteDAO principalQuoteDAO;

	@Autowired
	SchoolRepository schoolRepository;

	@RequestMapping()
	public ModelAndView taxView() {
		ModelAndView modelAndView = new ModelAndView("schooladmin-principalquotes");
		modelAndView.addObject("featureList", GlobalVariables.SCHOOL_FEATURE_LIST);
		modelAndView.addObject("staffCount", SchoolStaffDAO.getStaffCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("divisionCount", schoolDivDAO.getDivisionCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("studentCount", studentDAO.getStudentsCount(GlobalVariables.SCHOOL_ID));
		return modelAndView;
	}

	@RequestMapping(value = "/all", method = RequestMethod.GET)
	public @ResponseBody Object listAllPlans() {
		List<PrincipalQuoteModel> principalQuoteModels = principalQuoteDAO
				.getPrincipalQuotes(GlobalVariables.SCHOOL_ID);
		return principalQuoteModels.get(0);
	}

	@RequestMapping(value = { "/post" }, method = RequestMethod.POST, produces = { "application/json" })
	public @ResponseBody Object getJsonData(HttpServletRequest request,
			@RequestBody PrincipalQuoteModel principalQuoteModel, HttpSession session) {
		String loggedUser = (String) session.getAttribute("loggedUser");
		principalQuoteModel.setCreatedUser(loggedUser);
		principalQuoteModel.setUpdatedUser(loggedUser);
		principalQuoteModel.setCreatedDate(new Date());
		principalQuoteModel.setUpdatedDate(new Date());
		SchoolModel schoolModel = schoolRepository.findOne(GlobalVariables.SCHOOL_ID);
		principalQuoteModel.setSchoolModel(schoolModel);
		principalQuoteRepository.save(principalQuoteModel);
		quoteId= principalQuoteModel.getPrincipalQuoteID();
		return principalQuoteModel;

	}

	@RequestMapping(value = "/insertPrincipalImage", method = RequestMethod.POST)
	public @ResponseBody Object uploadKudosImage(@RequestParam(value = "file", required = false) MultipartFile file,
			HttpSession session, HttpServletRequest request) throws IOException {

		PrincipalQuoteModel principalQuoteModel = new PrincipalQuoteModel();
		if (file != null) {
			
			principalQuoteModel = principalQuoteRepository.findOne(quoteId);
			
			if (principalQuoteModel.getPrincipalImage() != null) {
				String[] fileName = principalQuoteModel.getPrincipalImage().split(FileAction.getURLBase(request));
				if (fileName.length > 0) {
					
					for (int i = 0; i < fileName.length; i++) {
						System.out.println("FOLEEEEE>>>"+fileName.length);
						FileAction.deleteFile(request, fileName[i]);
					}
					
				}
				
			}
			SchoolModel schoolModel = schoolRepository.findOne(GlobalVariables.SCHOOL_ID);
			String directory = "/resources/img/" + schoolModel.getManagementModel().getManagementName() + "/"
					+ schoolModel.getSchoolName() + "/principalquotes";
			System.out.println("DIRECTORYvb"+directory);
			principalQuoteModel.setPrincipalImage(UploadFiles.uploadDocument(file, request, directory, ".jpg"));
			principalQuoteRepository.save(principalQuoteModel);
		}
		return principalQuoteModel;
	}

}
