package com.zs.cws.schooladmin.myclass.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.swing.JOptionPane;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.zs.cws.schooladmin.myclass.dao.MyClassDAO;
import com.zs.cws.schooladmin.myclass.model.MyClassModel;
import com.zs.cws.schooladmin.myclass.repository.MyClassRepository;
import com.zs.cws.superadmin.master.subject.dao.SubjectDAO;
import com.zs.cws.superadmin.master.subject.model.SubjectModel;
import com.zs.cws.superadmin.master.subject.repository.SubjectRepository;
import com.zs.cws.superadmin.school.repository.SchoolRepository;
import com.zs.cws.superadmin.schooldivision.dao.SchoolDivDAO;
import com.zs.cws.superadmin.schooldivision.model.SchoolDivModel;
import com.zs.cws.superadmin.schooldivision.repository.SchoolDivRepository;
import com.zs.cws.superadmin.schoolstaff.dao.SchoolStaffDAO;
import com.zs.cws.superadmin.schoolstaff.model.SchoolStaffModel;
import com.zs.cws.superadmin.schoolstaff.repository.SchoolStaffRepository;
import com.zs.cws.superadmin.student.dao.StudentDAO;
import com.zs.cws.utils.GlobalVariables;

@Controller
@Scope("session")
@RequestMapping("schooladmin/myclass")
public class MyClassController {

	@Autowired
	MyClassDAO myClassDAO;
	@Autowired
	SchoolStaffDAO schoolStaffDAO;
	@Autowired
	MyClassRepository myClassRepository;
	@Autowired
	SubjectDAO subjectDAO;
	@Autowired
	SubjectRepository subjectRepository;
	@Autowired
	SchoolDivDAO schoolDivDAO;
	@Autowired
	SchoolDivRepository schoolDivRepository;
	@Autowired
	SchoolStaffRepository schoolStaffRepository;
	@Autowired
	SchoolRepository schoolRepository;
	@Autowired
	SchoolStaffDAO SchoolStaffDAO;
	
	@Autowired
	StudentDAO studentDAO;

	@RequestMapping()
	public ModelAndView myClassView() {
		ModelAndView modelAndView = new ModelAndView("school_admin_myclass");
		modelAndView.addObject("staffCount", SchoolStaffDAO.getStaffCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("divisionCount", schoolDivDAO.getDivisionCount(GlobalVariables.SCHOOL_ID));
		modelAndView.addObject("studentCount", studentDAO.getStudentsCount(GlobalVariables.SCHOOL_ID));
		return modelAndView;
	}

	@RequestMapping(value = "/all", method = RequestMethod.GET)
	public @ResponseBody Object listAll() {
		
		List<MyClassModel> classModels = myClassDAO.getMyClassDetails(GlobalVariables.SCHOOL_ID);
		return classModels;
	}
	
	
	
	
	@RequestMapping(value = { "/post" }, method = RequestMethod.POST, produces = { "application/json" })
	public @ResponseBody Object getJsonData(HttpServletRequest request, @RequestBody MyClassModel myClassModel,
			HttpSession session) {

		String loggedUser = (String) session.getAttribute("loggedUser");
		myClassModel.setCreatedBy(loggedUser);
		myClassModel.setUpdatedBy(loggedUser);
		myClassModel.setCreatedDate(new Date());
		myClassModel.setUpdatedDate(new Date());
		myClassModel.setSchoolId(GlobalVariables.SCHOOL_ID);
		SubjectModel subjectModel = subjectRepository.findOne(myClassModel.getSubjectModel().getSubjectId());
		myClassModel.setSubjectModel(subjectModel);
		SchoolStaffModel schoolStaffModel = schoolStaffRepository.findOne(myClassModel.getSchoolStaffModel().getSchoolStaffId());
		myClassModel.setSchoolStaffModel(schoolStaffModel);
		SchoolDivModel divModel = schoolDivRepository.findOne(myClassModel.getSchoolDivModel().getSchoolDivId());
		myClassModel.setSchoolDivModel(divModel);
		myClassRepository.save(myClassModel);
		return myClassModel;
		
	}

	@RequestMapping(value = "/getStaff", method = RequestMethod.GET)
	public @ResponseBody Object staffMap() {
		List<SchoolStaffModel> staffList = schoolStaffDAO.getStaffBySchoolForMyClass(GlobalVariables.SCHOOL_ID);
		Map<Integer, String> staffMap = new HashMap<>();
		for (SchoolStaffModel schoolStaffModel : staffList) {
			staffMap.put(schoolStaffModel.getSchoolStaffId(),
					schoolStaffModel.getFirstName() + " " + schoolStaffModel.getLastName());
		}
		return staffMap;

	}

	@RequestMapping(value = "/getSubject", method = RequestMethod.GET)
	public @ResponseBody Object subjectMap() {

		List<SubjectModel> subjectModels = subjectRepository.findAll();
		Map<Integer, String> subjectMap = new HashMap<>();
		for (SubjectModel subjectModel : subjectModels) {
			subjectMap.put(subjectModel.getSubjectId(), subjectModel.getSubject());
		}
		return subjectMap;

	}

	@RequestMapping(value = "/getClass", method = RequestMethod.GET)
	public @ResponseBody Object classMap() {
		List<SchoolDivModel> schoolDivModels = schoolDivDAO.getDivisionLists(GlobalVariables.SCHOOL_ID);
		Map<Integer, String>classMapss = new HashMap<>();
		for (SchoolDivModel schoolDivModel : schoolDivModels) {
			classMapss.put(schoolDivModel.getSchoolDivId(), schoolDivModel.getStandard()+ " "+schoolDivModel.getDivision());
		}
		return classMapss;
	}
	@RequestMapping(value = "/myClassdeleteItems/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int[] myClassIDs) {
		System.out.println("divisiondeleteItems" + myClassIDs);
		for (int myClassId : myClassIDs) {
			if (myClassId != 0) {
				myClassRepository.delete(myClassId);
			}
		}
		return true;
	}

	@RequestMapping(value = "/myClassdeleteSingleItem/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int myClassId) {
		if (myClassId != 0) {
			myClassRepository.delete(myClassId);
			return true;
		}
		return false;
	}


	@RequestMapping(value = "/isSubjectExist/{subjectId}/{schoolDivId}", method = RequestMethod.GET)
	public @ResponseBody Object isSubjectExist(@PathVariable("subjectId") String subjectId,@PathVariable("schoolDivId") String schoolDivId) {
		return myClassDAO.isSubjectExist(subjectId,GlobalVariables.SCHOOL_ID,schoolDivId);
	}
}
