package com.zs.cws.superadmin.specialdays.controller;

import java.io.IOException;
import java.util.Date;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.swing.JOptionPane;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.JOptCommandLinePropertySource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;
import com.zs.cws.superadmin.school.model.SchoolModel;
import com.zs.cws.superadmin.school.repository.SchoolRepository;
import com.zs.cws.superadmin.specialdays.dao.SpecialDaysDAO;
import com.zs.cws.superadmin.specialdays.model.SpecialDaysModel;
import com.zs.cws.superadmin.specialdays.repository.SpecialDaysRepository;
import com.zs.cws.utils.FileAction;
import com.zs.cws.utils.GlobalVariables;
import com.zs.cws.utils.UploadFiles;

@Controller
@RequestMapping("superadmin/specialdays")
public class SpecialDaysController {

	@Autowired
	SpecialDaysDAO specialDaysDAO;
	@Autowired
	SchoolRepository schoolRepository;

	@Autowired
	SpecialDaysRepository specialDaysRepository;
	int spclId;
	int schoolId;

	@RequestMapping()
	public ModelAndView viewSpecialDays(@RequestParam(value = "id", required = false) Integer id) {
		ModelAndView model = new ModelAndView("super_admin_specialdays");
		if (id != null)
			this.schoolId = id;
		return model;
	}

	@RequestMapping(value = "/listAll", method = RequestMethod.GET)
	public @ResponseBody Object listAllUsers() {
		
		List<SpecialDaysModel> daysModels = specialDaysDAO.findSpclDaysBySchool(this.schoolId);
		return daysModels;
	}

	@RequestMapping(value = { "/post" }, method = RequestMethod.POST, produces = { "application/json" })
	public @ResponseBody Object getJsonData(HttpServletRequest request, @RequestBody SpecialDaysModel specialDaysModel,
			HttpSession session) {

		String loggedUser = (String) session.getAttribute("loggedUser");
		specialDaysModel.setCreatedBy(loggedUser);
		specialDaysModel.setUpdatedBy(loggedUser);
		specialDaysModel.setCreatedDate(new Date());
		specialDaysModel.setUpdatedDate(new Date());
		SchoolModel schoolModel = schoolRepository.findOne(schoolId);
		specialDaysModel.setSchoolModel(schoolModel);
		specialDaysRepository.save(specialDaysModel);
		spclId = specialDaysModel.getSpecialDayId();
		return specialDaysModel;
	}

	@RequestMapping(value = "/spcldeleteItems/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int[] spclIDs) {
		for (int spID : spclIDs) {
			if (spID != 0) {
				System.out.println("newsiddddddddddd" + spID);
				specialDaysRepository.delete(spID);
			}
		}
		return true;

	}

	@RequestMapping(value = "/spcldeleteSingleItem/{id}", method = RequestMethod.GET)
	public @ResponseBody Object deleteItems(@PathVariable("id") int specialID, HttpServletRequest request) {

		SpecialDaysModel specialDaysModel = new SpecialDaysModel();
		specialDaysModel = specialDaysRepository.findOne(specialID);
		String[] fileName = specialDaysModel.getImageUrl().split(FileAction.getURLBase(request));
		FileAction.deleteFile(request, fileName[1]);
		specialDaysRepository.delete(specialID);
		return false;

	}

	@RequestMapping(value = "/insertSpclDayImage", method = RequestMethod.POST)
	public @ResponseBody Object uploadSpclDayImage(@RequestParam(value = "file", required = false) MultipartFile file,
			HttpSession session, HttpServletRequest request) throws IOException {

		SpecialDaysModel specialDaysModel = new SpecialDaysModel();
		if (file != null) {
			specialDaysModel = specialDaysRepository.findOne(spclId);
			if (specialDaysModel.getImageUrl() != null) {
				String[] fileName = specialDaysModel.getImageUrl().split(FileAction.getURLBase(request));
				FileAction.deleteFile(request, fileName[1]);
			}
			SchoolModel schoolModel = schoolRepository.findOne(schoolId);
			String directory = "/resources/img/" + schoolModel.getManagementModel().getManagementName() + "/"
					+ schoolModel.getSchoolName() + "/special days";
			specialDaysModel.setImageUrl(UploadFiles.uploadDocument(file, request, directory, ".jpg"));
			specialDaysRepository.save(specialDaysModel);
		}
		return specialDaysRepository;
	}
}
